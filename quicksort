import numpy as np
import random
n=10
B=[10,9,8,7,6,5,4,3,2,1]
A=np.zeros(n)
for i in range(n):
    A[i]=random.randint(1,20)
for i in range(n):
    for j in range (1,n):
        if A[i]==A[j]:
            A[i]=random.randint(1,20)
print(A)
l=1
r=8
           
def quicksort(A,l,r):
    def swap(A,i,k):
        t=A[i]
        A[i]=A[k]
        A[k]=t


    def partition(A,l,r):
        p=A[r]
        i=l+1
        j=r
        while i>=j:
        #while True :  
            while A[i]>=p and i!=r:
            #while True:
              i+=1
              if i==(len(A)-1):break
              if i==r: break
              if A[i]>=p:break
            while A[j]<=p and j!=l:
            #while True:
                j-=1
                if j==l:break
                if A[j]<=p:break
                if j==len(A)-1:break
            print (i,j,A[i],A[j],sep=' ')
            swap(A,i,j)
        
        swap(A,i,j)
        swap(A,j,l)
        return j
    def partition_lap(A,l,r):
        p=A[l]
        i=l+1
        j=r
        while A[i]<p:
            i+=1
        while A[j]>p:
            j-=1
        if i<j:
            t=A[i]
            A[i]=A[j]
            A[j]=t
            i+=1
            j-=1
            while A[i]<p:
                i+=1
                if i==j:
                    if A[i]<p:
                        h=A[i-1]
                        A[i-1]=p
                        p=h
                        return i-1
    if l<r:
        s=partition(A,l,r)
        quicksort(A,l,s)
        quicksort(A,s+1,r)
        return A
print(quicksort(A,l,r))
